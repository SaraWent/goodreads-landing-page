{"version":3,"sources":["components/DisplayBook/DisplayBook.js","components/DisplayBooklist/DisplayBookList.js","components/LandingPage/LandingPage.js","components/Book/Book.js","components/Booklist/BookList.js","components/Admin/Admin.js","firebase.js","components/LandingPageContainer.js","App.js","serviceWorker.js","index.js"],"names":["DisplayBook","book","this","props","className","src","imgurl","alt","title","author","desc","links","map","item","key","id","href","url","target","Component","DisplayBookList","state","newBookInput","errorMSG","fetchingData","books","index","isbn","LandingPage","React","Book","removeBook","bookID","type","placeholder","onClick","BookList","handleChange","e","setState","value","handleKeyUp","requestUri","process","Axios","get","then","res","data","JSON","parse","Convert","xml2json","compact","spaces","console","log","GoodreadsResponse","addNewBook","image_url","_text","_cdata","authors","name","description","isbn13","error","class","onChange","onKeyUp","Admin","bookIndex","bookCopy","splice","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LandingPageContainer","path","element","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.757792cf.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass DisplayBook extends Component {\n\n    render() {\n        const {\n            book,\n        } = this.props\n        return (\n\n\n            <article className=\"book-cont\">\n                <div className=\"book-img\">\n\n                    <img src={book.imgurl} alt={book.title} />\n                </div>\n                <div className=\"book-desc\">\n                    <h3 className=\"bk-title\">{book.title}</h3>\n                    <h4 className=\"author\">{book.author}</h4>\n\n                    <span className=\"bk-desc\">\n                        <b>{book.desc}</b>\n                    </span>\n                    <div className=\"retailers\">\n                        <ul className=\"buy-links\">\n                            {book.links.map(item => (\n                                <li key={item.id}>\n                                    <a className=\"button\" href={item.url} target=\"_blank\">{item.id}</a>\n                                </li>\n                            ))}\n                        </ul>\n\n                    </div>\n                </div>\n\n            </article>\n\n\n\n        )\n    }\n}\nexport { DisplayBook }\n","import React, { Component } from 'react'\nimport { DisplayBook } from '../DisplayBook'\n\n\n\nclass DisplayBookList extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            newBookInput: '',\n            errorMSG: '',\n            fetchingData: false\n        }\n    }\n\n    render() {\n        const { books, } = this.props\n        return (\n            <div>\n                {\n                    books.map((book, index) => {\n                        return (\n                            <DisplayBook\n                                key={`${book.isbn}-${index}`}\n                                book={book}\n                            />\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport { DisplayBookList };","import React from 'react';\nimport { DisplayBookList } from \"../DisplayBooklist\";\n// import { BookList } from \"../Booklist\";\n\nclass LandingPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: this.props.books\n        };\n    }\n\n    render() {\n        const { books } = this.state;\n        return (\n            <>\n                <header>\n                    <div className=\"container center\">\n                        <h1>This is My Awesome Campaign</h1>\n                        <h2>It's so cool you'll want them all.</h2>\n                    </div>\n                </header>\n                <main>\n                    <div className=\"container\">\n                        {/* <article className=\"book-cont\">\n                            <div className=\"book-img\">\n                                <img src=\"https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1580724442l/29566048._SX98_.jpg\" />\n                            </div>\n                            <div className=\"book-desc\">\n                                <h3 className=\"bk-title\">Pandemic: Tracking Contagions, from Cholera to Ebola and Beyond</h3>\n                                <h4 className=\"author\">Sonia Shah</h4>\n\n                                <span className=\"bk-desc\">\n                                    <b>A thrilling glimpse into the next likely global contagion---and how to stop it. </b>\n                                </span>\n                                <div className=\"retailers\">\n                                    <ul className=\"buy-links\">\n                                        <li><a className=\"button\" href=\"\">Amazon</a></li>\n                                        <li><a className=\"button\" href=\"\">B&N</a></li>\n                                        <li><a className=\"button\" href=\"\">BAM</a></li>\n                                        <li><a className=\"button\" href=\"\">IndieBound</a></li>\n                                        <li><a className=\"button\" href=\"\">Powells</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n\n                        </article> */}\n\n                        <DisplayBookList books={books} />\n                        {/* <BookList books={books} /> */}\n\n                    </div>\n                </main>\n                <footer>\n                    <p>&copy;2020</p>\n                </footer>\n\n            </>\n        );\n    }\n}\n\nexport { LandingPage };\n","//book\n\nimport React, { Component } from 'react'\n\nclass Book extends Component {\n\n    render() {\n        const {\n            book,\n            removeBook,\n            bookID\n        } = this.props\n        return (\n\n            <article className=\"book-cont item\">\n                <div className=\"book-img\">\n                    <img src={book.imgurl} alt={book.title} />\n                </div>\n                <div className=\"book-desc\">\n                    <div className=\"form-input\">\n                        <label>{book.title}</label>\n                        <input type=\"text\" placeholder={book.title} />\n                    </div>\n                    <div className=\"form-input\">\n                        <label>{book.author}</label>\n                        <input type=\"text\" placeholder={book.author} />\n                    </div>\n\n                    <div className=\"form-input\">\n                        <label>Description</label>\n                        <textarea>{book.desc}</textarea>\n                    </div>\n\n                    <div className=\"retailers\">\n                        <ul className=\"buy-links\">\n                            {book.links.map(item => (\n                                <li key={item.id}>\n                                    <a className=\"button\" href={item.url} target=\"_blank\">{item.id}</a>\n                                </li>\n                            ))}\n                        </ul>\n\n                    </div>\n                </div>\n                <div className=\"controls\">\n                    <button className=\"btn\">Save Entry</button>\n                    <button className=\"btn warning\" onClick={() => removeBook(bookID)}>Delete Entry</button>\n                </div>\n\n            </article>\n        )\n    }\n}\nexport { Book }\n","// List of books, function to add from Goodreads, Function to Remove from List, Edit Book on List\n// Todos:\n// Add loading animation/text\n// Add error message so program doesn't crash\n// Make landing page reflect booklist\n// Host on github\n// Connect to Firebase\n// Make all inputs editable\n// Add/delete retailer links\n// Create multi-user login system\n// Generate multiple pages per user and manage from a admin panel\n\n\n\nimport React, { Component } from 'react'\nimport Axios from 'axios';\nimport Convert from 'xml-js';\nimport { Book } from '../Book';\n\n\n\nclass BookList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            newBookInput: '',\n            errorMSG: '',\n            fetchingData: false,\n            errorMSG: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            newBookInput: e.target.value\n        })\n    }\n    handleKeyUp = (e) => {\n        if (e.key === 'Enter') {\n            const apiKey = process.env.REACT_APP_API_KEY;\n            // 9781250118004\n            // 9781250012210\n            // 9781429979351\n            // 9781250139092 This one throws an error!!\n            const isbn = this.state.newBookInput;\n            const requestUri =\n                `https://cors-anywhere.herokuapp.com/` +\n                `https://www.goodreads.com/book/isbn/${isbn}?key=${apiKey}`;\n            Axios.get(requestUri)\n                .then((res) => {\n                    const data = JSON.parse(\n                        Convert.xml2json(res.data, { compact: true, spaces: 2 })\n                    );\n                    console.log(data.GoodreadsResponse.book);\n\n                    const { addNewBook } = this.props\n                    addNewBook({\n                        isbn: isbn,\n                        imgurl: data.GoodreadsResponse.book.image_url._text,\n                        title: data.GoodreadsResponse.book.title._cdata,\n                        author: data.GoodreadsResponse.book.authors.author.name._text,\n                        desc: data.GoodreadsResponse.book.description._cdata,\n                        links: [\n                            { id: 'Amazon', url: \"https://www.amazon.com/dp/\" + data.GoodreadsResponse.book.isbn._cdata },\n                            { id: 'B&N', url: \"http://www.barnesandnoble.com/s/\" + data.GoodreadsResponse.book.isbn13._cdata },\n                            { id: 'BAM', url: \"https://www.booksamillion.com/product/\" + data.GoodreadsResponse.book.isbn13._cdata },\n                            { id: 'IndieBound', url: \"https://www.indiebound.org/book/\" + data.GoodreadsResponse.book.isbn13._cdata },\n                            { id: 'Powells', url: \"https://www.powells.com/book/-\" + data.GoodreadsResponse.book.isbn13._cdata }\n                        ]\n                    })\n\n                }, (error) => {\n                    console.log(error);\n                    this.setState({\n                        errorMSG: \"Invalid Input\",\n                        fetchingData: false\n                    });\n                });\n\n\n\n        }\n\n\n    }\n\n    render() {\n        const {\n            books,\n            removeBook,\n        } = this.props\n\n        const { newBookInput } = this.state\n        const { errorMSG } = this.state\n\n\n        return (\n            <div>\n                {\n                    books.map((book, index) => {\n                        return (\n                            <Book\n                                removeBook={removeBook}\n                                key={`${book.isbn}-${index}`}\n                                book={book}\n                                bookID={index} />\n                        )\n                    })\n                }\n                <article class=\"book-cont item\">\n                    <div class=\"form-input\">\n                        <label>Add New Item by ISBN</label>\n\n                        <input\n                            type=\"text\"\n                            placeholder=\"Enter ISBN\"\n                            onChange={this.handleChange}\n                            onKeyUp={this.handleKeyUp}\n                        />\n                        <span class=\"error\">{errorMSG}</span>\n\n                        {/* <div class=\"controls\">\n                            <button class=\"btn\" >Submit</button>\n                        </div> */}\n                    </div>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport { BookList };","import React, { Component } from 'react'\nimport { BookList } from \"../Booklist\";\n\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: this.props.books\n        };\n    }\n\n\n    removeBook = (bookIndex) => {\n        const bookCopy = [...this.state.books]\n        bookCopy.splice(bookIndex, 1)\n\n        this.setState({\n            books: bookCopy\n        })\n    }\n\n    addNewBook = (book) => {\n        const bookCopy = [...this.state.books, book]\n        // do your magic\n        this.setState({\n            books: bookCopy\n        })\n    }\n\n\n    render() {\n        const { books } = this.state\n        return (\n            <main>\n                <div class=\"container\">\n\n                    <BookList\n                        addNewBook={this.addNewBook}\n                        removeBook={this.removeBook}\n                        books={books}\n                    />\n\n                </div>\n            </main>\n\n        );\n    }\n}\n\nexport { Admin };\n","import firebase from 'firebase'\n\n// Your web app's Firebase configuration\nconst config = {\n    apiKey: \"AIzaSyC8G7ZvuVltnTAjulN9o-aHEeBb8BXQ5dk\",\n    authDomain: \"landing-page-proto-001.firebaseapp.com\",\n    databaseURL: \"https://landing-page-proto-001.firebaseio.com\",\n    projectId: \"landing-page-proto-001\",\n    storageBucket: \"landing-page-proto-001.appspot.com\",\n    messagingSenderId: \"315828741919\",\n    appId: \"1:315828741919:web:5edca17aae5a784704b22a\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { LandingPage } from './LandingPage';\nimport { Admin } from './Admin';\nimport firebase from '../firebase';\n\nclass LandingPageContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            books: [\n                {\n                    isbn: '9781250118004',\n                    imgurl: 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1580724442l/29566048._SX98_.jpg',\n                    title: 'Pandemic',\n                    author: 'Sonia Shah',\n                    desc: 'Book1 Description',\n                    links: [\n                        { id: 'Amazon', url: 'https://www.amazon.com/dp/10DIGITISBN' },\n                        { id: 'B&N', url: 'http://www.barnesandnoble.com/s/13DIGITISBN' },\n                        { id: 'BAM', url: 'https://www.booksamillion.com/product/13DIGITISBN' },\n                        { id: 'IndieBound', url: 'https://www.indiebound.org/book/13DIGITISBN' }\n                    ]\n                }\n            ]\n        }\n    }\n    render() {\n        return (\n            <Routes>\n                <Route path=\"/\" element={<LandingPage books={this.state.books} />} />\n                <Route path=\"/admin\" element={<Admin books={this.state.books} />} />\n            </Routes>\n        );\n    }\n}\n\nexport { LandingPageContainer };\n\n\n // 9781250118004\n            // 9781250012210\n            // 9781429979351\n            // 9781250139092 This one throws an error!!","import React from 'react';\nimport { LandingPageContainer } from './components';\nimport './App.css';\n\n// List of books, function to add from Goodreads, Function to Remove from List, Edit Book on List\n// Todos:\n// Add loading animation/text\n// Add error message so program doesn't crash\n// Make landing page reflect booklist\n// Host on github\n// Connect to Firebase\n// Make all inputs editable\n// Add/delete retailer links\n// Create multi-user login system\n// Generate multiple pages per user and manage from a admin panel\n\nfunction App() {\n  return <LandingPageContainer />;\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}